{"entrypoint": "D2i_apps.py", "files": {"D2i_apps.py": "import streamlit as st\n\nst.set_page_config(page_title=\"D2I Apps\")\nst.title(\"D2I Apps\")\n\nst.write(\"choose an app to run on the sidebar!\")\n", "pages/some_other_cool_app.py": "import streamlit as st\nimport plotly.figure_factory as ff\nimport numpy as np\n\n@st.cache_data\ndef load_data():\n    # Add histogram data\n    x1 = np.random.randn(200) - 2\n    x2 = np.random.randn(200)\n    x3 = np.random.randn(200) + 2\n\n    # Group data together\n    hist_data = [x1, x2, x3]\n    return hist_data\n\nhist_data = load_data()\n\ngroup_labels = [\"Group 1\", \"Group 2\", \"Group 3\"]\n\n# Create distplot with custom bin_size\nfig = ff.create_distplot(hist_data, group_labels, bin_size=[0.1, 0.25, 0.5])\n\n# Plot!\nst.plotly_chart(fig)\n", "pages/quality_data_usecase_EH.py": "import streamlit as st\nimport pandas as pd\nimport numpy as np\nimport plotly.express as px\n\n\ndef read_data(input_file):\n    # READ IN EARLY HELP AND COLLAPSE TO CHILD LEVEL\n    df_EH = pd.read_excel(input_file, sheet_name=\"Early Help\")\n\n    # rename Eh columns\n    df_EH = df_EH.rename(\n        columns={\n            \"Child Unique ID\": \"id\",\n            \"Assessment start date\": \"EH_start\",\n            \"Assessment completion date\": \"EH_end\",\n        }\n    )\n\n    df_EH = df_EH[[\"id\", \"EH_start\", \"EH_end\"]]\n\n    # only keep first date per child\n    df_EH_lim = (\n        df_EH.sort_values(by=[\"id\", \"EH_start\"]).groupby(\"id\").first().reset_index()\n    )\n\n    # READ IN CIN\n    df_CIN = pd.read_excel(input_file, sheet_name=\"Children in Need\")\n\n    # rename CIN columns\n    df_CIN = df_CIN.rename(\n        columns={\n            \"Child Unique ID\": \"id\",\n            \"CIN Start Date\": \"CIN_start\",\n            \"CIN Closure Date\": \"CIN_end\",\n            \"Primary Need Code\": \"need_type\",\n            \"Ethnicity\": \"ethnicity\",\n            \"Gender\": \"gender\",\n        }\n    )\n    # limit CIN\n    df_CIN = df_CIN[[\"id\", \"CIN_start\", \"CIN_end\", \"need_type\", \"gender\", \"ethnicity\"]]\n\n    # only keep first CIN episode\n    df_CIN_lim = (\n        df_CIN.sort_values(by=[\"id\", \"CIN_start\"]).groupby(\"id\").first().reset_index()\n    )\n\n    # merge files together - only keeping those in the CiN file\n    data = pd.merge(df_CIN_lim, df_EH_lim, how=\"left\", on=[\"id\"]).reset_index()\n\n    # create variable for Early Help before CiN\n    data[\"EH_before_CIN\"] = 0\n    data.loc[data.EH_start < data.CIN_start, \"EH_before_CIN\"] = 1\n\n    return data\n\n\nst.header(\"usecase for quality data EH\")\n\nuploaded_file = st.file_uploader(\"Choose a dummy annex A file\")\nif uploaded_file is not None:\n    data = read_data(uploaded_file)\n    option_to_col = {\n        \"Primary need\": \"need_type\",\n        \"Gender\": \"gender\",\n        \"Ethnicity\": \"ethnicity\",\n    }\n    option = st.selectbox(\"Child characteristics\", option_to_col.keys())\n\n    st.write(\"You selected:\", option)\n    col_name = option_to_col[option]\n    dt = data.groupby([data[\"EH_before_CIN\"], col_name], as_index=False).size()\n    dt[\"group_size\"] = dt.groupby(dt[\"EH_before_CIN\"])[\"size\"].transform(np.sum)\n    dt[\"perc\"] = round((dt[\"size\"] / dt[\"group_size\"]) * 100, 1)\n    dt[\"EH_before_CIN\"] = dt[\"EH_before_CIN\"].astype(str)\n    # st.bar_chart(dt, x=col_name, y=\"perc\")\n    fig = px.bar(\n        dt,\n        x=col_name,\n        color=\"EH_before_CIN\",\n        y=\"perc\",\n        barmode=\"group\",\n        title=\"Child characteristics by whether or not<br>they received Early Help before children's services\",\n    )\n\n    fig.update_layout(yaxis_title=\"Percentage of children\", xaxis_title=option)\n    st.plotly_chart(fig)\n    st.write(dt)\n"}, "requirements": ["openpyxl", "plotly", "scipy"]}